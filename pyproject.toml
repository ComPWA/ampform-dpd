[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [{name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dependencies = [
    "ampform >=0.14.8", # Kibble and Kallen functions, perform_cached_doit, @unevaluated
    "attrs >=20.1.0", # on_setattr and https://www.attrs.org/en/stable/api.html#next-gen
    "cloudpickle",
    "qrules >=0.10.0",
    "sympy >=1.10", # module sympy.printing.numpy and array expressions with shape kwarg
    "tensorwaves[jax]",
]
description = "Symbolic expressions for Dalitz-Plot Decomposition"
dynamic = ["version"]
license = {text = "GPLv3 or later"}
name = "ampform-dpd"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "ampform-dpd[doc]",
    "ampform-dpd[jupyter]",
    "ampform-dpd[sty]",
    "ampform-dpd[test]",
    "sphinx-autobuild",
    "tox >=1.9", # for skip_install, use_develop
]
doc = [
    "graphviz",
    "ipympl",
    "ipywidgets",
    "matplotlib",
    "myst-nb >=0.14", # nb_render_markdown_format for Markdown tables
    "sphinx-api-relink >=0.0.4",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-pybtex-etal-style",
    "sphinx-togglebutton",
    "sphinxcontrib-bibtex",
    "tensorwaves[phsp]",
    "tqdm",
]
jax = [
    "tensorwaves[jax]",
]
jupyter = [
    "ampform-dpd[doc]",
    "black",
    "isort",
    "jupyterlab >=3.0",
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
]
numba = [
    "tensorwaves[numba]",
]
sty = [
    "ampform-dpd[types]",
    "mypy",
    "pre-commit >=1.4.0",
    "ruff",
]
tensorflow = [
    "ampform-dpd[tf]",
]
test = [
    "nbmake",
    "numpy",
    "pytest >=6.0", # pyproject.toml
    "pytest-cov",
    "pytest-xdist",
]
tf = [
    "tensorwaves[tf]",
]
types = [
    "docutils",
    "pybtex",
    "pytest",
    "sphinx",
    "sphinx-api-relink >=0.0.4",
]

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
Changelog = "https://github.com/ComPWA/ampform-dpd/releases"
Documentation = "https://compwa.github.io/ampform-dpd"
Source = "https://github.com/ComPWA/ampform-dpd"
Tracker = "https://github.com/ComPWA/ampform-dpd/issues"

[tool.setuptools]
include-package-data = false
package-dir = {"" = "src"}

[tool.setuptools.package-data]
ampform_dpd = ["py.typed"]

[tool.setuptools.packages.find]
namespaces = false
where = ["src"]

[tool.setuptools_scm]
write_to = "src/ampform_dpd/version.py"

[tool.mypy]
exclude = "_build"
show_error_codes = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["cloudpickle.*"]

[[tool.mypy.overrides]]
check_untyped_defs = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
module = ["tests.*"]

[tool.pyright]
reportArgumentType = false
reportAssignmentType = false
reportAttributeAccessIssue = false
reportCallIssue = false
reportGeneralTypeIssues = false
reportImportCycles = false
reportIncompatibleMethodOverride = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportOperatorIssue = false
reportPrivateImportUsage = false
reportReturnType = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryContains = false
reportUnnecessaryIsInstance = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--doctest-continue-on-failure",
    "--doctest-modules",
    "--durations=3",
    "--ignore=docs/conf.py",
    "-m not slow",
]
filterwarnings = [
    "error",
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (select with '-m slow')",
]
norecursedirs = [
    ".ipynb_checkpoints",
    "_build",
]
testpaths = [
    "src",
    "tests",
]

[tool.ruff]
extend-exclude = ["typings"]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true
src = [
    "src",
    "tests",
]
target-version = "py38"

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
extend-select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "D",
    "EM",
    "ERA",
    "FA",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PGH",
    "PIE",
    "PL",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "T20",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
ignore = [
    "B028",
    "C408",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "E501",
    "ISC001",
    "ISC003",
    "PLC2401",
    "PLR0913",
    "PLW1514",
    "S301",
    "SIM108",
]
task-tags = ["cspell"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pep8-naming]
ignore-names = [
    "A",
    "H",
    "L",
    "R",
    "R_dec",
    "R_prod",
    "S",
    "Γ*",
    "λ*",
]

[tool.ruff.lint.per-file-ignores]
"*" = ["D"]
"*.ipynb" = [
    "B018",
    "C90",
    "D",
    "E402",
    "E703",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "PLW2901",
    "S101",
    "T20",
    "TCH00",
]
"docs/*" = [
    "E402",
    "INP001",
    "PLR2004",
    "S101",
    "S113",
    "T201",
]
"docs/conf.py" = ["D100"]
"jpsi2ksp.ipynb" = ["PLC2701"]
"setup.py" = ["D100"]
"src/ampform_dpd/io.py" = ["S403"]
"tests/*" = [
    "D",
    "INP001",
    "PGH001",
    "PLC2701",
    "PLR0913",
    "PLR2004",
    "PLR6301",
    "S101",
    "T20",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
